# Generated by Django 3.0.6 on 2020-06-02 05:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import user_resource.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.OAUTH2_PROVIDER_APPLICATION_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SentMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(max_length=256)),
                ('status', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.OAUTH2_PROVIDER_APPLICATION_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SecondaryEmail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secondary_emails', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, choices=[['AE', 'Aerospace Engineering'], ['ANIM', 'Animation'], ['ASC', 'Application Software Centre'], ['AGP', 'Applied Geophysics'], ['ASI', 'Applied Statistics and Informatics'], ['BME', 'Biomedical Engineering'], ['BB', 'Biosciences and Bioengineering'], ['BIOTECH', 'Biotechnology'], ['CASDE', 'Centre for Aerospace Systems Design and Engineering'], ['CDEEP', 'Centre for Distance Engineering Education Programme'], ['CESE', 'Centre for Environmental Science and Engineering'], ['CFDVS', 'Centre for Formal Design and Verification of Software'], ['CPS', 'Centre for Policy Studies'], ['CRNTS', 'Centre for Research in Nanotechnology and Science'], ['CTARA', 'Centre for Technology Alternatives for Rural Areas'], ['CUSE', 'Centre for Urban Science and Engineering'], ['CSRE', 'Centre of Studies in Resources Engineering'], ['CHE', 'Chemical Engineering'], ['CH', 'Chemistry'], ['CLE', 'Civil Engineering'], ['CLS', 'Climate Studies'], ['CC', 'Computer Centre'], ['CSE', 'Computer Science & Engineering'], ['CEP', 'Continuing Education Programme'], ['CORRSCI', 'Corrosion Science and Engineering'], ['DSCE', 'Desai Sethi Centre for Entrepreneurship'], ['ES', 'Earth Sciences'], ['ET', 'Educational Technology'], ['EE', 'Electrical Engineering'], ['ESE', 'Energy Science and Engineering'], ['HSS', 'Humanities & Social Science'], ['IITBMRA', 'IITB-Monash Research Academy'], ['IDC', 'Industrial Design Centre'], ['IDC', 'Industrial Design Centre'], ['IEOR', 'Industrial Engineering and Operations Research'], ['IM', 'Industrial Management'], ['IxD', 'Interaction Design'], ['KReSIT', 'Kanwal Rekhi School of Information Technology'], ['MS', 'Material Science'], ['MMM', 'Materials, Manufacturing and Modelling'], ['MM', 'Mathematics'], ['ME', 'Mechanical Engineering'], ['MEMS', 'Metallurgical Engineering & Materials Science'], ['MVD', 'Mobility and Vehicle Design'], ['NCAIR', 'National Centre for Aerospace Innovation and Research'], ['NCM', 'National Centre for Mathematics'], ['PHE', 'Physical Education'], ['PH', 'Physics'], ['PMS', 'Physics, Material Science'], ['PC', 'Preparatory Course'], ['RE', 'Reliability Engineering'], ['SJMSOM', 'Shailesh J. Mehta School of Management'], ['SAIF', 'Sophisticated Analytical Instrument Facility'], ['SCE', 'Systems and Control Engineering'], ['TCTD', 'Tata Center for Technology and Design'], ['VISCOM', 'Visual Communication'], ['WRCB', 'Wadhwani Research Centre for Bioengineering']], max_length=16, null=True)),
                ('join_year', models.PositiveSmallIntegerField(blank=True, null=True, validators=[user_resource.models.validate_join_year])),
                ('graduation_year', models.PositiveSmallIntegerField(blank=True, null=True, validators=[user_resource.models.validate_graduation_year])),
                ('degree', models.CharField(blank=True, choices=[['BTECH', 'Bachelor of Technology'], ['MTECH', 'Master of Technology'], ['DD', 'B.Tech. + M.Tech. Dual Degree'], ['MSC', 'Master of Science'], ['PHD', 'Doctor of Philosophy'], ['BDES', 'Bachelor of Design'], ['MDES', 'Master of Design'], ['MPHIL', 'Master of Philosophy'], ['MMG', 'Master of Management'], ['MSEx', 'M.S. (Exit Degree)'], ['MtechEx', 'Master of Technology (Exit Degree)'], ['MtechPhDDD', 'M.Tech. + Ph.D. Dual Degree'], ['PC', 'Preparatory Course'], ['VS', 'Visiting Student'], ['MPhilEx', 'Master of Philosophy (Exit Degree)'], ['MScEx', 'Master of Science (Exit Degree)'], ['MScMTechDD', 'M.Sc. + M.Tech. Dual Degree'], ['MScPhDDD', 'M.Sc. + Ph.D. Dual Degree'], ['MPhilPhDDD', 'M.Phil. + Ph.D. Dual Degree'], ['EMBA', 'Executive MBA'], ['FYBS', 'Four Year BS'], ['IMTECH', 'Integrated M.Tech.'], ['MSCBR', 'Master of Science By Research'], ['TYMSC', 'Two Year M.Sc.'], ['FYIMSC', 'Five Year Integrated M.Sc.'], ['DIIT', 'D.I.I.T.'], ['DIITEx', 'D.I.T.T. (Exit Degree)']], max_length=16, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='program', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InstituteAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room', models.CharField(blank=True, max_length=8, null=True)),
                ('hostel', models.CharField(blank=True, choices=[['1', 'Hostel 1'], ['2', 'Hostel 2'], ['3', 'Hostel 3'], ['4', 'Hostel 4'], ['5', 'Hostel 5'], ['6', 'Hostel 6'], ['7', 'Hostel 7'], ['8', 'Hostel 8'], ['9', 'Hostel 9'], ['10', 'Hostel 10'], ['11', 'Hostel 11'], ['12', 'Hostel 12'], ['13', 'Hostel 13'], ['14', 'Hostel 14'], ['15', 'Hostel 15'], ['16', 'Hostel 16'], ['18', 'Hostel 18'], ['tansa', 'Tansa'], ['qip', 'QIP']], max_length=8, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='insti_address', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalSecondaryEmail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical secondary email',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalProgram',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('department', models.CharField(blank=True, choices=[['AE', 'Aerospace Engineering'], ['ANIM', 'Animation'], ['ASC', 'Application Software Centre'], ['AGP', 'Applied Geophysics'], ['ASI', 'Applied Statistics and Informatics'], ['BME', 'Biomedical Engineering'], ['BB', 'Biosciences and Bioengineering'], ['BIOTECH', 'Biotechnology'], ['CASDE', 'Centre for Aerospace Systems Design and Engineering'], ['CDEEP', 'Centre for Distance Engineering Education Programme'], ['CESE', 'Centre for Environmental Science and Engineering'], ['CFDVS', 'Centre for Formal Design and Verification of Software'], ['CPS', 'Centre for Policy Studies'], ['CRNTS', 'Centre for Research in Nanotechnology and Science'], ['CTARA', 'Centre for Technology Alternatives for Rural Areas'], ['CUSE', 'Centre for Urban Science and Engineering'], ['CSRE', 'Centre of Studies in Resources Engineering'], ['CHE', 'Chemical Engineering'], ['CH', 'Chemistry'], ['CLE', 'Civil Engineering'], ['CLS', 'Climate Studies'], ['CC', 'Computer Centre'], ['CSE', 'Computer Science & Engineering'], ['CEP', 'Continuing Education Programme'], ['CORRSCI', 'Corrosion Science and Engineering'], ['DSCE', 'Desai Sethi Centre for Entrepreneurship'], ['ES', 'Earth Sciences'], ['ET', 'Educational Technology'], ['EE', 'Electrical Engineering'], ['ESE', 'Energy Science and Engineering'], ['HSS', 'Humanities & Social Science'], ['IITBMRA', 'IITB-Monash Research Academy'], ['IDC', 'Industrial Design Centre'], ['IDC', 'Industrial Design Centre'], ['IEOR', 'Industrial Engineering and Operations Research'], ['IM', 'Industrial Management'], ['IxD', 'Interaction Design'], ['KReSIT', 'Kanwal Rekhi School of Information Technology'], ['MS', 'Material Science'], ['MMM', 'Materials, Manufacturing and Modelling'], ['MM', 'Mathematics'], ['ME', 'Mechanical Engineering'], ['MEMS', 'Metallurgical Engineering & Materials Science'], ['MVD', 'Mobility and Vehicle Design'], ['NCAIR', 'National Centre for Aerospace Innovation and Research'], ['NCM', 'National Centre for Mathematics'], ['PHE', 'Physical Education'], ['PH', 'Physics'], ['PMS', 'Physics, Material Science'], ['PC', 'Preparatory Course'], ['RE', 'Reliability Engineering'], ['SJMSOM', 'Shailesh J. Mehta School of Management'], ['SAIF', 'Sophisticated Analytical Instrument Facility'], ['SCE', 'Systems and Control Engineering'], ['TCTD', 'Tata Center for Technology and Design'], ['VISCOM', 'Visual Communication'], ['WRCB', 'Wadhwani Research Centre for Bioengineering']], max_length=16, null=True)),
                ('join_year', models.PositiveSmallIntegerField(blank=True, null=True, validators=[user_resource.models.validate_join_year])),
                ('graduation_year', models.PositiveSmallIntegerField(blank=True, null=True, validators=[user_resource.models.validate_graduation_year])),
                ('degree', models.CharField(blank=True, choices=[['BTECH', 'Bachelor of Technology'], ['MTECH', 'Master of Technology'], ['DD', 'B.Tech. + M.Tech. Dual Degree'], ['MSC', 'Master of Science'], ['PHD', 'Doctor of Philosophy'], ['BDES', 'Bachelor of Design'], ['MDES', 'Master of Design'], ['MPHIL', 'Master of Philosophy'], ['MMG', 'Master of Management'], ['MSEx', 'M.S. (Exit Degree)'], ['MtechEx', 'Master of Technology (Exit Degree)'], ['MtechPhDDD', 'M.Tech. + Ph.D. Dual Degree'], ['PC', 'Preparatory Course'], ['VS', 'Visiting Student'], ['MPhilEx', 'Master of Philosophy (Exit Degree)'], ['MScEx', 'Master of Science (Exit Degree)'], ['MScMTechDD', 'M.Sc. + M.Tech. Dual Degree'], ['MScPhDDD', 'M.Sc. + Ph.D. Dual Degree'], ['MPhilPhDDD', 'M.Phil. + Ph.D. Dual Degree'], ['EMBA', 'Executive MBA'], ['FYBS', 'Four Year BS'], ['IMTECH', 'Integrated M.Tech.'], ['MSCBR', 'Master of Science By Research'], ['TYMSC', 'Two Year M.Sc.'], ['FYIMSC', 'Five Year Integrated M.Sc.'], ['DIIT', 'D.I.I.T.'], ['DIITEx', 'D.I.T.T. (Exit Degree)']], max_length=16, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical program',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInstituteAddress',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('room', models.CharField(blank=True, max_length=8, null=True)),
                ('hostel', models.CharField(blank=True, choices=[['1', 'Hostel 1'], ['2', 'Hostel 2'], ['3', 'Hostel 3'], ['4', 'Hostel 4'], ['5', 'Hostel 5'], ['6', 'Hostel 6'], ['7', 'Hostel 7'], ['8', 'Hostel 8'], ['9', 'Hostel 9'], ['10', 'Hostel 10'], ['11', 'Hostel 11'], ['12', 'Hostel 12'], ['13', 'Hostel 13'], ['14', 'Hostel 14'], ['15', 'Hostel 15'], ['16', 'Hostel 16'], ['18', 'Hostel 18'], ['tansa', 'Tansa'], ['qip', 'QIP']], max_length=8, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical institute address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalContactNumber',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('number', models.CharField(max_length=16)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical contact number',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ContactNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=16)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
